NUMBER = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"

def get_product(l, r):
    res = 1
    for i in range(l, r + 1):
        res *= int(NUMBER[i])
    return res

def find_largest_adjacent_product(adjacent_digit_amount):
    res = max(get_product(l, l + adjacent_digit_amount - 1) for l in range(len(NUMBER) - adjacent_digit_amount + 1))
    return res

if __name__ == "__main__":
    print(find_largest_adjacent_product(4)) # 5832
    print(find_largest_adjacent_product(13)) # 23514624000

"""
【1】
假设左边坐标是l,字符串长len(s), [l,r]包含q个元素，右边还够长，求右边的坐标：
r = l + q - 1
l在最左边坐标是0
【2】
假设右边坐标是r,字符串长len(s), [l, r]包含q个元素)，左边还够长，求左边的坐标：
l = r - q + 1
r在最右边坐标是len(s)-1
【3】
假设坐标l和r，那么[l,r]有多少个数？相距多元？
amount = r - l + 1
distance = r -l
"A到B距离是1，但是有2个站点"
"""